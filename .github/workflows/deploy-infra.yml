name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'cdk/**'
      - '.github/workflows/deploy-infra.yml'
      - '!**.md'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev/prod)'
        required: true
        default: 'prod'
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: read
  actions: write

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: eu-central-1
          
      - name: Install CDK Dependencies
        run: |
          cd cdk
          npm ci
          
      - name: Deploy Infrastructure
        id: deploy
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
          DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
        run: |
          cd cdk
          npm run deploy -- --require-approval never --outputs-file outputs.json
          
          STACK_NAME="ParkRunStack"
          BUCKET_NAME=$(jq -r ".[\"$STACK_NAME\"].BucketName" outputs.json)
          DISTRIBUTION_ID=$(jq -r ".[\"$STACK_NAME\"].DistributionId" outputs.json)
          
          echo "bucket_name=${BUCKET_NAME}" >> $GITHUB_OUTPUT
          echo "distribution_id=${DISTRIBUTION_ID}" >> $GITHUB_OUTPUT
  
      - name: Update GitHub Secrets
        uses: gliech/create-github-secret-action@v1
        with:
          name: FRONTEND_BUCKET
          value: ${{ steps.deploy.outputs.bucket_name }}
          pa_token: ${{ secrets.GH_PA_TOKEN }}
            
      - name: Update Distribution ID
        uses: gliech/create-github-secret-action@v1
        with:
          name: CLOUDFRONT_ID
          value: ${{ steps.deploy.outputs.distribution_id }}
          pa_token: ${{ secrets.GH_PA_TOKEN }}
